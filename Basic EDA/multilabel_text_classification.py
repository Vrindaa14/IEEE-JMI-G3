# -*- coding: utf-8 -*-
"""MultiLabel Text Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fhLpkAQn7RpX2BCmNAhhO8iu7tUet0Vw
"""

import os
import csv
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/gdrive/My Drive/IEEE JMI

data_r=pd.read_csv("train.csv")

print("Rows, Columns:",data_r.shape)
data_r.head()

filter=data_r["comment_text"] != ""
data_r=data_r[filter]
data_r=data_r.dropna()

print(data_r.isnull().sum())

data_r.columns

rowS = data_r.iloc[:,2:].sum(axis=1)
clean_comments = (rowS==0).sum(axis=0)
print("Total number of comments = ",len(data_r))
print("Number of clean comments = ",clean_comments)
print("Number of comments with labels =",(len(data_r)-clean_comments))

comments_labels=data_r[["toxic", "severe_toxic", "obscene", "threat", "insult", "identity_hate"]]
comments_labels.head()

fig_size=plt.rcParams["figure.figsize"]
fig_size[0]=8
fig_size[1]=6
plt.rcParams["figure.figsize"]=fig_size
plt.title("Comments in each Semantic Category", fontsize=24)
plt.ylabel('Number of comments', fontsize=18)
plt.xlabel('Type ', fontsize=18)

comments_labels.sum(axis=0).plot.bar()

color = sns.color_palette()
x=rowS.value_counts()
plt.figure(figsize=(8,6))
ax = sns.barplot(x.index, x.values, alpha=0.8,color=color[2])
plt.title("Multiple tags")
plt.ylabel('# of Occurrences', fontsize=12)
plt.xlabel('# of tags ', fontsize=12)
plt.show()

h_df=data_r.iloc[:,2:-1]
corr=h_df.corr()
plt.figure(figsize=(8,6))
sns.heatmap(corr,xticklabels=corr.columns.values,yticklabels=corr.columns.values,annot=True)

labels=list(data_r.columns.values)
labels=labels[2:]
print(labels)

lcount=[]
for r in labels:
    lcount.append((r, data_r[r].sum()))
df_lcount=pd.DataFrame(lcount, columns=['category', 'number of comments'])
df_lcount

rowS = data_r.iloc[:,2:].sum(axis=1)
rowS

from wordcloud import WordCloud,STOPWORDS

plt.figure(figsize=(7,5))
rec=data_r[data_r.toxic==1]
text=rec.comment_text.values
cloud_1=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 1)
plt.axis('off')
plt.title("Toxic",fontsize=10)
plt.imshow(cloud_1)

rec=data_r[data_r.severe_toxic==1]
text=rec.comment_text.values
cloud_2=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 2)
plt.axis('off')
plt.title("severe_toxic",fontsize=10)
plt.imshow(cloud_2)

rec=data_r[data_r.obscene==1]
text=rec.comment_text.values
cloud_3=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 3)
plt.axis('off')
plt.title("obscene",fontsize=10)
plt.imshow(cloud_3)

rec=data_r[data_r.threat==1]
text=rec.comment_text.values
cloud_4=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 4)
plt.axis('off')
plt.title("threat",fontsize=10)
plt.imshow(cloud_4)

rec=data_r[data_r.insult==1]
text=rec.comment_text.values
cloud_5=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 5)
plt.axis('off')
plt.title("insult",fontsize=10)
plt.imshow(cloud_5)

rec=data_r[data_r.identity_hate==1]
text=rec.comment_text.values
cloud_6=WordCloud(stopwords=STOPWORDS,background_color='black',collocations=False,width=200,
                  height=200).generate(" ".join(text))
plt.subplot(2, 3, 6)
plt.axis('off')
plt.title("identity_hate",fontsize=10)
plt.imshow(cloud_6)

